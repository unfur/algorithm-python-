#define _CRT_SECURE_NO_WARNINGS
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include<limits.h>
#include<stdbool.h>
#define V 8

int shortrode(int dist[],bool final[]) {
	int short_index;
	int min = INT_MAX;
	for (int i = 0; i < V; i++)
	{
		if ((final[i] == false) && (dist[i] < min)) {
			min = dist[i]; short_index = i;
		}
	}
	return short_index;
}

void printDist(int dist[],int rode[V][V]) {
	printf("顶点  距离    路线\n");
	for (int i = 0; i < V; i++) {
		
			printf("%d     %d        ", i, dist[i]);
			for (int rodeIndex = 0; rodeIndex < V; rodeIndex++) {
				if (rode[i][rodeIndex] == i) {
					printf("%d", rode[i][rodeIndex]);
					break;
				}
				printf("%d ", rode[i][rodeIndex]);
			}
			printf("\n");
		
	}
}

void Dijstra(int graph[V][V],int start) {
	int dist[V];
	bool final[V];
	int rode[V][V] = {0};
	for (int i = 0; i < V; i++) {
		dist[i] = INT_MAX; final[i] = false; rode[i][0] = i;
	}
	dist[start] = 0;
	for (int i = 0; i < V-1; i++) {
		int u = shortrode(dist, final);
		final[u] = true;
		for (int a = 0; a < V; a++) {
			if ((!final[a]) && graph[u][a]&&(dist[a]>dist[u]+graph[u][a])) {
				dist[a] = dist[u] + graph[u][a];
			
				//更新路程
				for (int numIndex = 0; numIndex < V; numIndex++) {
					rode[a][numIndex] = rode[u][numIndex];
					if (rode[u][numIndex] == u) {
						rode[a][numIndex + 1] = a;
						break;
					}
				}
			}
		}
	
	}
	printDist(dist, rode);
}

int main() {
	int graph[V][V] = {
		{0, 6, 0, 1, 0, 50,0,0}, {0, 0, 43, 11, 6, 0,0,0}, 
		{0, 0, 0, 0, 0, 0, 0,8}, {0, 0, 0, 0, 1, 0,0,0}, 
		{0, 0, 38, 0, 0, 0,24,0}, {0, 0, 0, 0, 0, 0,0,0},
		{0, 0, 0, 0, 0, 0, 0, 20},{0,0,0,0,0,0,0,0}
	};
	Dijstra(graph, 0);
	return 0;
}
